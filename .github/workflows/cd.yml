name: cd
on:
  push:
    branches: [main]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: "europe-north1"
  GAR_REPOSITORY: "notely-ar-repo"
  IMAGE_NAME: "wuggyx2/notely"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"

      - name: Build
        run: ./scripts/buildprod.sh

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker for GAR
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          # Construct the full image path
          IMAGE_PATH="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}"

          # Use the Git SHA for a unique image tag
          IMAGE_TAG_SHA="${IMAGE_PATH}:${{ github.sha }}"
          # Also tag as 'latest'
          IMAGE_TAG_LATEST="${IMAGE_PATH}:latest"

          echo "Building Docker image: $IMAGE_TAG_SHA and $IMAGE_TAG_LATEST"

          # Build the Docker image
          # Assumes Dockerfile is in the root context (.)
          docker build -t "$IMAGE_TAG_SHA" -t "$IMAGE_TAG_LATEST" .

          # Push the image with the SHA tag
          echo "Pushing $IMAGE_TAG_SHA"
          docker push "$IMAGE_TAG_SHA"

          # Push the image with the 'latest' tag
          echo "Pushing $IMAGE_TAG_LATEST"
          docker push "$IMAGE_TAG_LATEST"
        env:
          # Ensure GCP_PROJECT_ID is available in this step's environment if not already globally set
          GCP_PROJECT_ID: ${{ env.GCP_PROJECT_ID }}
